import { Component, Input, ViewChild, EventEmitter, Output } from '@angular/core';
import { MultiSelect } from 'primeng/multiselect';
import isEqual from 'lodash.isequal';
import { MODE } from '../constants';
import { ProvenanceWidgetsService } from '../provenance-widgets.service';
import * as i0 from "@angular/core";
import * as i1 from "../provenance-widgets.service";
import * as i2 from "primeng/api";
import * as i3 from "@angular/common";
import * as i4 from "@angular-slider/ngx-slider";
import * as i5 from "primeng/button";
import * as i6 from "@angular/forms";
import * as i7 from "primeng/multiselect";
import * as i8 from "../icon/icon.component";
export class MultiselectComponent extends MultiSelect {
    get selected() {
        return this._selected;
    }
    set selected(value) {
        if (!this.firstChange && !isEqual(this._selected, value)) {
            this.handleChange(value || []);
        }
        this.firstChange = false;
        this._selected = value;
    }
    get provenance() {
        return this._provenance;
    }
    set provenance(value) {
        if (this._provenance && value?.revalidate) {
            this._provenance = value;
            this.ngOnInit();
            this._visualize();
        }
        this._provenance = value;
    }
    constructor(mss, el, renderer, cd, zone, filterService, config, overlayService) {
        super(el, renderer, cd, zone, filterService, config, overlayService);
        this.mss = mss;
        this.firstChange = true;
        this.mode = MODE;
        this.selectedChange = new EventEmitter();
        this.visualize = true;
        this.freeze = false;
        this.interval = NaN;
        this.optionsRecord = {};
        this.myOverlayOptions = { 'appendTo': 'body', ...this.overlayOptions };
        this.provenanceChange = new EventEmitter();
        mss.init(el, ".panel" + this.mss.myId + " > div > ul", "multiselect");
        mss.crosshairSelect = (keys) => {
            this.selectedChange.emit(keys.map((key) => this.optionsRecord[key]));
        };
    }
    getId() {
        return this.mss.myId;
    }
    ngOnInit() {
        super.ngOnInit();
        this.mss.options = this.options.length;
        this.mss.mode = this.mode;
        this.options.forEach((option) => {
            this.optionsRecord[option[this.dataKey]] = option;
        });
        if (this.provenance?.hasUserInteracted || this.provenance?.revalidate) {
            this.mss.setProvenance(this.provenance);
            this.selected = Object
                .entries(this.mss.getProvenance().dataByOption)
                .filter(([_, v]) => {
                const last = v.at(-1);
                return last && last.unselect === undefined && last.select !== undefined;
            })
                .map(([k, _]) => this.optionsRecord[k]);
            return;
        }
        if (this.selected) {
            this.mss.addSimultaneousEvents([], this.selected.map(o => o[this.dataKey]), this.freeze, false);
        }
    }
    ngAfterViewInit() {
        super.ngAfterViewInit();
        this.mss.setElement(this.el);
        if (this.mss.getProvenance()?.hasUserInteracted)
            this._visualize();
    }
    ngOnDestroy() {
        clearInterval(this.interval);
    }
    handleHide(e) {
        this.onPanelHide?.emit(e);
        this.overlayVisible = false;
    }
    handleShow(e) {
        this.onPanelShow?.emit(e);
        this.overlayVisible = true;
        this._visualize();
    }
    handleChange(value) {
        this.mss.addSimultaneousEvents(this.selected ? this.selected.map(o => o[this.dataKey]) : [], value.map(o => o[this.dataKey]), this.freeze, true, new Date(), this.provenanceChange, this._visualize.bind(this));
    }
    _visualize() {
        if (!this.visualize || !this.overlayVisible)
            return;
        let li = undefined;
        for (const option of this.options) {
            const div = document.getElementById(this.mss.myId + option[this.dataKey] + 'div');
            if (div && div.parentElement) {
                li = div.parentElement;
                break;
            }
        }
        if (!li)
            return;
        // subtracting padding values
        // TODO: remove magic numbers
        const offsetWidth = li.offsetWidth - 40 - 22; //checkbox width
        const offsetHeight = li.offsetHeight - 24;
        this.mss.visualize(this.mode, offsetWidth, offsetHeight);
    }
    getOption(key) {
        const events = this.mss.dataByOption[key]?.length;
        return events ? `(${events})` : "";
    }
    getProvenance() {
        return this.mss;
    }
    handleClick(btn) {
        this.mss.toggleProvenanceMode(btn, false);
        setTimeout(() => this.pMultiSelect.show(), this.pMultiSelect.overlayVisible ? 1000 : 0);
    }
    handleFilter(event) {
        this.onFilter?.emit(event);
        // When the filter is cleared, items are not made available to the DOM immediately, so we need to wait a bit
        // TODO: find a better way to handle this
        const timeout = event.filter ? 0 : 100;
        setTimeout(() => this._visualize(), timeout);
    }
}
MultiselectComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: MultiselectComponent, deps: [{ token: i1.ProvenanceWidgetsService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.FilterService }, { token: i2.PrimeNGConfig }, { token: i2.OverlayService }], target: i0.ɵɵFactoryTarget.Component });
MultiselectComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: MultiselectComponent, selector: "provenance-multiselect", inputs: { mode: "mode", selected: "selected", iconSize: "iconSize", visualize: "visualize", freeze: "freeze", provenance: "provenance" }, outputs: { selectedChange: "selectedChange", provenanceChange: "provenanceChange" }, providers: [ProvenanceWidgetsService], viewQueries: [{ propertyName: "pMultiSelect", first: true, predicate: ["pMultiSelect"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"p-inputgroup flex flex-row gap-3\">\n    <button\n    *ngIf=\"visualize\"\n    pButton\n    type=\"button\"\n    class=\"p-button-help p-button-text\"\n    [disabled]=\"!getProvenance().hasUserInteracted\"\n    [ngStyle]=\"{ 'padding': 0, 'align-self': 'center', 'height': 'min-content', 'visibility': visualize ? 'visible' : 'hidden'}\"\n    #btn\n    (click)=\"handleClick(btn)\"\n   >\n    <provenance-icon \n    [icon]=\"!getProvenance().hasUserInteracted ? 'disabled' : getProvenance().provenanceMode\"\n    [size]=\"iconSize\"\n    ></provenance-icon>\n   </button>\n   <p-multiSelect\n    #pMultiSelect \n    [appendTo]=\"appendTo\" \n    [ariaFilterLabel]=\"ariaFilterLabel\" \n    [label]=\"label\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [autofocusFilter]=\"autofocusFilter\"\n    [autoZIndex]=\"autoZIndex\"\n    [baseZIndex]=\"baseZIndex\"\n    [defaultLabel]=\"defaultLabel\"\n    [dataKey]=\"dataKey\"\n    [disabled]=\"disabled\"\n    [displaySelectedLabel]=\"displaySelectedLabel\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [filter]=\"filter\"\n    [filterMatchMode]=\"filterMatchMode\"\n    [filterValue]=\"filterValue\"\n    [filterLocale]=\"filterLocale\"\n    [filterBy]=\"filterBy\"\n    [filterPlaceHolder]=\"filterPlaceHolder\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [inputId]=\"inputId\"\n    [maxSelectedLabels]=\"maxSelectedLabels || 3\"\n    [name]=\"name\"\n    [options]=\"options\"\n    [optionLabel]=\"optionLabel\"\n    [optionValue]=\"optionValue\"\n    [optionDisabled]=\"optionDisabled\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [group]=\"group\"\n    [overlayVisible]=\"overlayVisible\"\n    [panelStyle]=\"panelStyle\"\n    [placeholder]=\"placeholder\"\n    [readonly]=\"readonly\"\n    [emptyMessage]=\"emptyMessage\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [resetFilterOnHide]=\"resetFilterOnHide\"\n    [scrollHeight]=\"scrollHeight\"\n    [selectedItemsLabel]=\"selectedItemsLabel\"\n    [selectionLimit]=\"selectionLimit\"\n    [showHeader]=\"showHeader\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [showToggleAll]=\"showToggleAll\"\n    [style]=\"style\"\n    [styleClass]=\"(styleClass || '') + ' provenance-multiselect'\"\n    [panelStyleClass]=\"(panelStyleClass || '') + 'provenance-multiselect-panel panel' + this.getId()\"\n    [tabindex]=\"tabindex\"\n    [tooltip]=\"tooltip\"\n    [tooltipStyleClass]=\"tooltipStyleClass\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\n    [showClear]=\"showClear\"\n    [virtualScroll]=\"virtualScroll\"\n    [virtualScrollItemSize]=\"virtualScrollItemSize\"\n    [virtualScrollOptions]=\"virtualScrollOptions\"\n    [overlayOptions]=\"myOverlayOptions\"\n    [lazy]=\"lazy\"\n    (onClick)=\"onClick\"\n    (onChange)=\"onChange\"\n    (onFilter)=\"handleFilter($event)\"\n    (onFocus)=\"onFocus\"\n    (onBlur)=\"onBlur\"\n    (onPanelShow)=\"handleShow($event)\"\n    (onPanelHide)=\"handleHide($event)\"\n    (onClear)=\"onClear\"\n    (onLazyLoad)=\"onLazyLoad\"\n    (onRemove)=\"onRemove\"\n    (ngModelChange)=\"this.getProvenance().interaction = 'user-change'; selectedChange.emit($event)\"\n    [ngModel]=\"selected\"\n    >\n      <ng-template let-option pTemplate=\"item\">\n        <div style=\"position: relative; width: 100%;\" [id]=\"getId() + option[dataKey] + 'div'\">\n          <svg \n            [id]=\"getId() + option[dataKey]\" \n            width=\"0\" \n            height=\"0\"\n            [style]=\"{ 'position': 'absolute', 'display': getProvenance().hasUserInteracted ? 'initial' : 'none' }\"\n          ></svg>\n          <div style=\"display: flex; justify-content: space-between; position: inherit;\">\n            <span>\n              {{ option[optionLabel] }}\n            </span>\n          </div>\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"footer\">\n        <div class=\"custom-slider temporal-slider\">\n          <ngx-slider\n            *ngIf=\"getProvenance().provenanceMode === 'temporal'\"\n            [value]=\"getProvenance().temporalFilterRange[0]\"\n            [highValue]=\"getProvenance().temporalFilterRange[1]\"\n            [options]=\"getProvenance().temporalOptions\"\n            (userChangeEnd)=\"getProvenance().setTemporalRange($event)\"\n          >\n          </ngx-slider>\n        </div>\n      </ng-template>\n    </p-multiSelect>\n  \n   </div>", styles: ["::ng-deep div.provenance-multiselect-panel>div>ul{position:relative}::ng-deep div.provenance-multiselect-panel>div.p-multiselect-footer.ng-star-inserted:has(div.temporal-slider){padding-left:48px;padding-right:24px}::ng-deep div.provenance-multiselect-panel>div.p-multiselect-items-wrapper>ul>p-multiselectitem>li.p-multiselect-item{background:none!important}::ng-deep div.provenance-multiselect{width:initial!important}\n", "::ng-deep .custom-slider .ngx-slider .ngx-slider-bar{background:lightgray;height:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-selection{background:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer{width:8px;height:16px;top:auto;bottom:0;background-color:#333;border-top-left-radius:3px;border-top-right-radius:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer:after{display:none}::ng-deep .custom-slider:not(.temporal-slider) .ngx-slider .ngx-slider-bubble{top:5px}::ng-deep .custom-slider .ngx-slider .ngx-slider-limit{font-weight:700;color:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick{width:1px;height:10px;margin-left:4px;border-radius:0;background:#ffe4d1;top:-1px}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:var(--blue-500)}::ng-deep g.axis text{font-size:.7rem}::ng-deep .custom-slider span{margin-top:0!important;padding-top:0!important}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i4.SliderComponent, selector: "ngx-slider", inputs: ["value", "highValue", "options", "manualRefresh", "triggerFocus"], outputs: ["valueChange", "highValueChange", "userChangeStart", "userChange", "userChangeEnd"] }, { kind: "directive", type: i2.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "directive", type: i5.ButtonDirective, selector: "[pButton]", inputs: ["iconPos", "loadingIcon", "label", "icon", "loading"] }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i7.MultiSelect, selector: "p-multiSelect", inputs: ["style", "styleClass", "panelStyle", "panelStyleClass", "inputId", "disabled", "readonly", "group", "filter", "filterPlaceHolder", "filterLocale", "overlayVisible", "tabindex", "appendTo", "dataKey", "name", "label", "ariaLabelledBy", "displaySelectedLabel", "maxSelectedLabels", "selectionLimit", "selectedItemsLabel", "showToggleAll", "emptyFilterMessage", "emptyMessage", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "showHeader", "filterBy", "scrollHeight", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "filterMatchMode", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "display", "autocomplete", "showClear", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "defaultLabel", "placeholder", "options", "filterValue", "itemSize"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onClear", "onPanelShow", "onPanelHide", "onLazyLoad", "onRemove"] }, { kind: "component", type: i8.IconComponent, selector: "provenance-icon", inputs: ["icon", "size"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: MultiselectComponent, decorators: [{
            type: Component,
            args: [{ selector: 'provenance-multiselect', providers: [ProvenanceWidgetsService], template: "<div class=\"p-inputgroup flex flex-row gap-3\">\n    <button\n    *ngIf=\"visualize\"\n    pButton\n    type=\"button\"\n    class=\"p-button-help p-button-text\"\n    [disabled]=\"!getProvenance().hasUserInteracted\"\n    [ngStyle]=\"{ 'padding': 0, 'align-self': 'center', 'height': 'min-content', 'visibility': visualize ? 'visible' : 'hidden'}\"\n    #btn\n    (click)=\"handleClick(btn)\"\n   >\n    <provenance-icon \n    [icon]=\"!getProvenance().hasUserInteracted ? 'disabled' : getProvenance().provenanceMode\"\n    [size]=\"iconSize\"\n    ></provenance-icon>\n   </button>\n   <p-multiSelect\n    #pMultiSelect \n    [appendTo]=\"appendTo\" \n    [ariaFilterLabel]=\"ariaFilterLabel\" \n    [label]=\"label\"\n    [ariaLabelledBy]=\"ariaLabelledBy\"\n    [autofocusFilter]=\"autofocusFilter\"\n    [autoZIndex]=\"autoZIndex\"\n    [baseZIndex]=\"baseZIndex\"\n    [defaultLabel]=\"defaultLabel\"\n    [dataKey]=\"dataKey\"\n    [disabled]=\"disabled\"\n    [displaySelectedLabel]=\"displaySelectedLabel\"\n    [dropdownIcon]=\"dropdownIcon\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [filter]=\"filter\"\n    [filterMatchMode]=\"filterMatchMode\"\n    [filterValue]=\"filterValue\"\n    [filterLocale]=\"filterLocale\"\n    [filterBy]=\"filterBy\"\n    [filterPlaceHolder]=\"filterPlaceHolder\"\n    [hideTransitionOptions]=\"hideTransitionOptions\"\n    [inputId]=\"inputId\"\n    [maxSelectedLabels]=\"maxSelectedLabels || 3\"\n    [name]=\"name\"\n    [options]=\"options\"\n    [optionLabel]=\"optionLabel\"\n    [optionValue]=\"optionValue\"\n    [optionDisabled]=\"optionDisabled\"\n    [optionGroupLabel]=\"optionGroupLabel\"\n    [optionGroupChildren]=\"optionGroupChildren\"\n    [group]=\"group\"\n    [overlayVisible]=\"overlayVisible\"\n    [panelStyle]=\"panelStyle\"\n    [placeholder]=\"placeholder\"\n    [readonly]=\"readonly\"\n    [emptyMessage]=\"emptyMessage\"\n    [emptyFilterMessage]=\"emptyFilterMessage\"\n    [resetFilterOnHide]=\"resetFilterOnHide\"\n    [scrollHeight]=\"scrollHeight\"\n    [selectedItemsLabel]=\"selectedItemsLabel\"\n    [selectionLimit]=\"selectionLimit\"\n    [showHeader]=\"showHeader\"\n    [showTransitionOptions]=\"showTransitionOptions\"\n    [showToggleAll]=\"showToggleAll\"\n    [style]=\"style\"\n    [styleClass]=\"(styleClass || '') + ' provenance-multiselect'\"\n    [panelStyleClass]=\"(panelStyleClass || '') + 'provenance-multiselect-panel panel' + this.getId()\"\n    [tabindex]=\"tabindex\"\n    [tooltip]=\"tooltip\"\n    [tooltipStyleClass]=\"tooltipStyleClass\"\n    [tooltipPosition]=\"tooltipPosition\"\n    [tooltipPositionStyle]=\"tooltipPositionStyle\"\n    [showClear]=\"showClear\"\n    [virtualScroll]=\"virtualScroll\"\n    [virtualScrollItemSize]=\"virtualScrollItemSize\"\n    [virtualScrollOptions]=\"virtualScrollOptions\"\n    [overlayOptions]=\"myOverlayOptions\"\n    [lazy]=\"lazy\"\n    (onClick)=\"onClick\"\n    (onChange)=\"onChange\"\n    (onFilter)=\"handleFilter($event)\"\n    (onFocus)=\"onFocus\"\n    (onBlur)=\"onBlur\"\n    (onPanelShow)=\"handleShow($event)\"\n    (onPanelHide)=\"handleHide($event)\"\n    (onClear)=\"onClear\"\n    (onLazyLoad)=\"onLazyLoad\"\n    (onRemove)=\"onRemove\"\n    (ngModelChange)=\"this.getProvenance().interaction = 'user-change'; selectedChange.emit($event)\"\n    [ngModel]=\"selected\"\n    >\n      <ng-template let-option pTemplate=\"item\">\n        <div style=\"position: relative; width: 100%;\" [id]=\"getId() + option[dataKey] + 'div'\">\n          <svg \n            [id]=\"getId() + option[dataKey]\" \n            width=\"0\" \n            height=\"0\"\n            [style]=\"{ 'position': 'absolute', 'display': getProvenance().hasUserInteracted ? 'initial' : 'none' }\"\n          ></svg>\n          <div style=\"display: flex; justify-content: space-between; position: inherit;\">\n            <span>\n              {{ option[optionLabel] }}\n            </span>\n          </div>\n        </div>\n      </ng-template>\n      <ng-template pTemplate=\"footer\">\n        <div class=\"custom-slider temporal-slider\">\n          <ngx-slider\n            *ngIf=\"getProvenance().provenanceMode === 'temporal'\"\n            [value]=\"getProvenance().temporalFilterRange[0]\"\n            [highValue]=\"getProvenance().temporalFilterRange[1]\"\n            [options]=\"getProvenance().temporalOptions\"\n            (userChangeEnd)=\"getProvenance().setTemporalRange($event)\"\n          >\n          </ngx-slider>\n        </div>\n      </ng-template>\n    </p-multiSelect>\n  \n   </div>", styles: ["::ng-deep div.provenance-multiselect-panel>div>ul{position:relative}::ng-deep div.provenance-multiselect-panel>div.p-multiselect-footer.ng-star-inserted:has(div.temporal-slider){padding-left:48px;padding-right:24px}::ng-deep div.provenance-multiselect-panel>div.p-multiselect-items-wrapper>ul>p-multiselectitem>li.p-multiselect-item{background:none!important}::ng-deep div.provenance-multiselect{width:initial!important}\n", "::ng-deep .custom-slider .ngx-slider .ngx-slider-bar{background:lightgray;height:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-selection{background:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer{width:8px;height:16px;top:auto;bottom:0;background-color:#333;border-top-left-radius:3px;border-top-right-radius:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer:after{display:none}::ng-deep .custom-slider:not(.temporal-slider) .ngx-slider .ngx-slider-bubble{top:5px}::ng-deep .custom-slider .ngx-slider .ngx-slider-limit{font-weight:700;color:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick{width:1px;height:10px;margin-left:4px;border-radius:0;background:#ffe4d1;top:-1px}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:var(--blue-500)}::ng-deep g.axis text{font-size:.7rem}::ng-deep .custom-slider span{margin-top:0!important;padding-top:0!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ProvenanceWidgetsService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.FilterService }, { type: i2.PrimeNGConfig }, { type: i2.OverlayService }]; }, propDecorators: { mode: [{
                type: Input
            }], selected: [{
                type: Input
            }], selectedChange: [{
                type: Output
            }], iconSize: [{
                type: Input
            }], visualize: [{
                type: Input
            }], freeze: [{
                type: Input
            }], pMultiSelect: [{
                type: ViewChild,
                args: ["pMultiSelect"]
            }], provenance: [{
                type: Input
            }], provenanceChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,