import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { Dropdown } from 'primeng/dropdown';
import { MODE } from '../constants';
import { ProvenanceWidgetsService } from '../provenance-widgets.service';
import isEqual from 'lodash.isequal';
import * as i0 from "@angular/core";
import * as i1 from "../provenance-widgets.service";
import * as i2 from "primeng/api";
import * as i3 from "@angular/common";
import * as i4 from "@angular-slider/ngx-slider";
import * as i5 from "primeng/button";
import * as i6 from "@angular/forms";
import * as i7 from "primeng/dropdown";
import * as i8 from "../icon/icon.component";
export class DropdownComponent extends Dropdown {
    get selected() {
        return this._selected;
    }
    set selected(value) {
        if (!this.firstChange && !isEqual(this._selected, value)) {
            this.handleChange({ originalEvent: new Event("provenance"), value });
        }
        this.firstChange = false;
        this._selected = value;
    }
    get provenance() {
        return this._provenance;
    }
    set provenance(value) {
        if (this._provenance && value?.revalidate) {
            this._provenance = value;
            this.ngOnInit();
            this._visualize();
        }
        this._provenance = value;
    }
    constructor(mss, el, renderer, cd, zone, filterService, config) {
        super(el, renderer, cd, zone, filterService, config);
        this.mss = mss;
        this.firstChange = true;
        this.mode = MODE;
        this.visualize = true;
        this.selectedChange = new EventEmitter();
        this.interval = NaN;
        this.optionsRecord = {};
        this.myOverlayOptions = {
            'appendTo': 'body',
            hideOnEscape: false,
            ...this.overlayOptions
        };
        this.freeze = false;
        this.provenanceChange = new EventEmitter();
        mss.init(el, ".panel" + this.mss.myId + " > div > ul", "select");
        mss.crosshairSelect = (keys) => {
            this.selectedChange.emit(this.optionsRecord[keys[0]]);
        };
    }
    ngOnInit() {
        super.ngOnInit();
        this.mss.options = this.options.length;
        this.mss.mode = this.mode;
        this.options.forEach((option) => {
            this.optionsRecord[option[this.dataKey]] = option;
        });
        if (this.provenance?.hasUserInteracted || this.provenance?.revalidate) {
            this.mss.setProvenance(this.provenance);
            this.selected = Object
                .entries(this.mss.getProvenance().dataByOption)
                .filter(([_, v]) => {
                const last = v.at(-1);
                return last && last.unselect === undefined && last.select !== undefined;
            })
                .map(([k, _]) => this.optionsRecord[k])[0];
            return;
        }
        if (this.selected) {
            this.mss.addSimultaneousEvents([], [this.selected[this.dataKey]], this.freeze, false);
        }
    }
    ngAfterViewInit() {
        this.mss.setElement(this.el);
        super.ngAfterViewInit();
        if (this.mss.getProvenance()?.hasUserInteracted)
            this._visualize();
    }
    getProvenance() {
        return this.mss;
    }
    getId() {
        return this.mss.myId;
    }
    handleClick(btn) {
        this.mss.toggleProvenanceMode(btn, false);
        setTimeout(() => this.pDropdown.show(), this.pDropdown.overlayVisible ? 1000 : 0);
    }
    handleChange(e) {
        this.mss.addSimultaneousEvents(this.selected ? [this.selected[this.dataKey]] : [], e.value ? [e.value[this.dataKey]] : [], this.freeze, true, new Date(), this.provenanceChange, this._visualize.bind(this));
    }
    handleFilter(event) {
        this.onFilter?.emit(event);
        const timeout = event.filter ? 0 : 100;
        setTimeout(() => this._visualize(), timeout);
    }
    toggleShow(e) {
        this[this.overlayVisible ? 'onHide' : 'onShow']?.emit(e);
        this.overlayVisible = !this.overlayVisible;
        this._visualize();
    }
    _visualize() {
        if (!this.visualize || !this.overlayVisible)
            return;
        let li = undefined;
        for (const option of this.options) {
            const div = document.getElementById(this.mss.myId + option[this.dataKey] + 'div');
            if (div && div.parentElement) {
                li = div.parentElement;
                break;
            }
        }
        if (!li)
            return;
        const offsetWidth = li.offsetWidth - 40;
        const offsetHeight = li.offsetHeight - 24;
        this.mss.visualize(this.mode, offsetWidth, offsetHeight);
    }
}
DropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: DropdownComponent, deps: [{ token: i1.ProvenanceWidgetsService }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.FilterService }, { token: i2.PrimeNGConfig }], target: i0.ɵɵFactoryTarget.Component });
DropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.2.10", type: DropdownComponent, selector: "provenance-dropdown", inputs: { mode: "mode", selected: "selected", iconSize: "iconSize", visualize: "visualize", provenance: "provenance", freeze: "freeze" }, outputs: { selectedChange: "selectedChange", provenanceChange: "provenanceChange" }, providers: [ProvenanceWidgetsService], viewQueries: [{ propertyName: "pDropdown", first: true, predicate: ["pDropdown"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<div class=\"p-inputgroup flex flex-row gap-3\">\n    <button\n        *ngIf=\"visualize\"\n        pButton\n        type=\"button\"\n        class=\"p-button-help p-button-text\"\n        [disabled]=\"!getProvenance().hasUserInteracted\"\n        [ngStyle]=\"{ 'padding': 0, 'align-self': 'center', 'height': 'min-content', 'visibility': visualize ? 'visible' : 'hidden'}\"\n        #btn\n        (click)=\"handleClick(btn)\"\n    >\n        <provenance-icon\n            [icon]=\"!getProvenance().hasUserInteracted ? 'disabled' : getProvenance().provenanceMode\"\n            [size]=\"iconSize\"\n        ></provenance-icon>\n    </button>\n    <p-dropdown\n        #pDropdown\n        [scrollHeight]=\"scrollHeight\"\n        [filter]=\"filter\"\n        [name]=\"name\"\n        [style]=\"style\"\n        [panelStyle]=\"panelStyle\"\n        [styleClass]=\"(styleClass || '') + ' provenance-dropdown'\"\n        [panelStyleClass]=\"(panelStyleClass || '') + 'provenance-dropdown-panel panel' + this.getId()\"\n        [readonly]=\"readonly\"\n        [required]=\"required\"\n        [editable]=\"editable\"\n        [appendTo]=\"appendTo\"\n        [tabindex]=\"tabindex\"\n        [placeholder]=\"placeholder\"\n        [filterPlaceholder]=\"filterPlaceholder\"\n        [filterLocale]=\"filterLocale\"\n        [inputId]=\"inputId\"\n        [selectId]=\"selectId\"\n        [dataKey]=\"dataKey\"\n        [filterBy]=\"filterBy\"\n        [autofocus]=\"autofocus\"\n        [resetFilterOnHide]=\"resetFilterOnHide\"\n        [dropdownIcon]=\"dropdownIcon\"\n        [optionLabel]=\"optionLabel\"\n        [optionValue]=\"optionValue\"\n        [optionDisabled]=\"optionDisabled\"\n        [optionGroupLabel]=\"optionGroupLabel\"\n        [optionGroupChildren]=\"optionGroupChildren\"\n        [autoDisplayFirst]=\"autoDisplayFirst\"\n        [group]=\"group\"\n        [showClear]=\"showClear\"\n        [emptyFilterMessage]=\"emptyFilterMessage\"\n        [emptyMessage]=\"emptyMessage\"\n        [lazy]=\"lazy\"\n        [virtualScroll]=\"virtualScroll\"\n        [virtualScrollItemSize]=\"virtualScrollItemSize\"\n        [virtualScrollOptions]=\"virtualScrollOptions\"\n        [overlayOptions]=\"myOverlayOptions\"\n        [ariaFilterLabel]=\"ariaFilterLabel\"\n        [ariaLabel]=\"ariaLabel\"\n        [ariaLabelledBy]=\"ariaLabelledBy\"\n        [filterMatchMode]=\"filterMatchMode\"\n        [maxlength]=\"maxlength\"\n        [tooltip]=\"tooltip\"\n        [tooltipPosition]=\"tooltipPosition\"\n        [tooltipPositionStyle]=\"tooltipPositionStyle\"\n        [tooltipStyleClass]=\"tooltipStyleClass\"\n        [autofocusFilter]=\"autofocusFilter\"\n        [overlayDirection]=\"overlayDirection\"\n        [disabled]=\"disabled\"\n        [itemSize]=\"itemSize\"\n        [autoZIndex]=\"autoZIndex\"\n        [baseZIndex]=\"baseZIndex\"\n        [showTransitionOptions]=\"showTransitionOptions\"\n        [hideTransitionOptions]=\"hideTransitionOptions\"\n        [options]=\"options\"\n        [filterValue]=\"filterValue\"\n        (onChange)=\"onChange\"\n        (onFilter)=\"handleFilter($event)\"\n        (onFocus)=\"onFocus\"\n        (onBlur)=\"onBlur\"\n        (onClick)=\"onClick\"\n        (onShow)=\"toggleShow($event)\"\n        (onHide)=\"toggleShow($event)\"\n        (onClear)=\"onClear\"\n        (onLazyLoad)=\"onLazyLoad\"\n        (ngModelChange)=\"this.getProvenance().interaction = 'user-change'; selectedChange.emit($event)\"\n        [ngModel]=\"selected\"\n    >\n        <ng-template let-option pTemplate=\"item\">\n            <div style=\"position: relative; width: 100%;\" [id]=\"getId() + option[dataKey] + 'div'\">\n                <svg \n                  [id]=\"getId() + option[dataKey]\" \n                  width=\"0\" \n                  height=\"0\"\n                  [style]=\"{ 'position': 'absolute', 'display': getProvenance().hasUserInteracted ? 'initial' : 'none' }\"\n                ></svg>\n                <div style=\"display: flex; justify-content: space-between; position: inherit;\">\n                    <span>\n                        {{ option[optionLabel] }}\n                    </span>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template pTemplate=\"footer\">\n            <div class=\"custom-slider temporal-slider\">\n                <ngx-slider\n                    *ngIf=\"getProvenance().provenanceMode === 'temporal'\"\n                    [value]=\"getProvenance().temporalFilterRange[0]\"\n                    [highValue]=\"getProvenance().temporalFilterRange[1]\"\n                    [options]=\"getProvenance().temporalOptions\"\n                    (userChangeEnd)=\"getProvenance().setTemporalRange($event)\"\n                ></ngx-slider>\n            </div>\n        </ng-template>\n    </p-dropdown>\n</div>\n", styles: ["::ng-deep div.provenance-dropdown-panel>div>ul{position:relative}::ng-deep div.provenance-dropdown-panel>div.temporal-slider{padding-right:1.25rem;padding-left:1.25rem}::ng-deep .provenance-dropdown{width:initial!important}\n", "::ng-deep .custom-slider .ngx-slider .ngx-slider-bar{background:lightgray;height:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-selection{background:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer{width:8px;height:16px;top:auto;bottom:0;background-color:#333;border-top-left-radius:3px;border-top-right-radius:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer:after{display:none}::ng-deep .custom-slider:not(.temporal-slider) .ngx-slider .ngx-slider-bubble{top:5px}::ng-deep .custom-slider .ngx-slider .ngx-slider-limit{font-weight:700;color:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick{width:1px;height:10px;margin-left:4px;border-radius:0;background:#ffe4d1;top:-1px}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:var(--blue-500)}::ng-deep g.axis text{font-size:.7rem}::ng-deep .custom-slider span{margin-top:0!important;padding-top:0!important}\n"], dependencies: [{ kind: "directive", type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i3.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "component", type: i4.SliderComponent, selector: "ngx-slider", inputs: ["value", "highValue", "options", "manualRefresh", "triggerFocus"], outputs: ["valueChange", "highValueChange", "userChangeStart", "userChange", "userChangeEnd"] }, { kind: "directive", type: i2.PrimeTemplate, selector: "[pTemplate]", inputs: ["type", "pTemplate"] }, { kind: "directive", type: i5.ButtonDirective, selector: "[pButton]", inputs: ["iconPos", "loadingIcon", "label", "icon", "loading"] }, { kind: "directive", type: i6.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i6.RequiredValidator, selector: ":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]", inputs: ["required"] }, { kind: "directive", type: i6.MaxLengthValidator, selector: "[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]", inputs: ["maxlength"] }, { kind: "directive", type: i6.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "component", type: i7.Dropdown, selector: "p-dropdown", inputs: ["scrollHeight", "filter", "name", "style", "panelStyle", "styleClass", "panelStyleClass", "readonly", "required", "editable", "appendTo", "tabindex", "placeholder", "filterPlaceholder", "filterLocale", "inputId", "selectId", "dataKey", "filterBy", "autofocus", "resetFilterOnHide", "dropdownIcon", "optionLabel", "optionValue", "optionDisabled", "optionGroupLabel", "optionGroupChildren", "autoDisplayFirst", "group", "showClear", "emptyFilterMessage", "emptyMessage", "lazy", "virtualScroll", "virtualScrollItemSize", "virtualScrollOptions", "overlayOptions", "ariaFilterLabel", "ariaLabel", "ariaLabelledBy", "filterMatchMode", "maxlength", "tooltip", "tooltipPosition", "tooltipPositionStyle", "tooltipStyleClass", "autofocusFilter", "overlayDirection", "disabled", "itemSize", "autoZIndex", "baseZIndex", "showTransitionOptions", "hideTransitionOptions", "options", "filterValue"], outputs: ["onChange", "onFilter", "onFocus", "onBlur", "onClick", "onShow", "onHide", "onClear", "onLazyLoad"] }, { kind: "component", type: i8.IconComponent, selector: "provenance-icon", inputs: ["icon", "size"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.2.10", ngImport: i0, type: DropdownComponent, decorators: [{
            type: Component,
            args: [{ selector: 'provenance-dropdown', providers: [ProvenanceWidgetsService], template: "<div class=\"p-inputgroup flex flex-row gap-3\">\n    <button\n        *ngIf=\"visualize\"\n        pButton\n        type=\"button\"\n        class=\"p-button-help p-button-text\"\n        [disabled]=\"!getProvenance().hasUserInteracted\"\n        [ngStyle]=\"{ 'padding': 0, 'align-self': 'center', 'height': 'min-content', 'visibility': visualize ? 'visible' : 'hidden'}\"\n        #btn\n        (click)=\"handleClick(btn)\"\n    >\n        <provenance-icon\n            [icon]=\"!getProvenance().hasUserInteracted ? 'disabled' : getProvenance().provenanceMode\"\n            [size]=\"iconSize\"\n        ></provenance-icon>\n    </button>\n    <p-dropdown\n        #pDropdown\n        [scrollHeight]=\"scrollHeight\"\n        [filter]=\"filter\"\n        [name]=\"name\"\n        [style]=\"style\"\n        [panelStyle]=\"panelStyle\"\n        [styleClass]=\"(styleClass || '') + ' provenance-dropdown'\"\n        [panelStyleClass]=\"(panelStyleClass || '') + 'provenance-dropdown-panel panel' + this.getId()\"\n        [readonly]=\"readonly\"\n        [required]=\"required\"\n        [editable]=\"editable\"\n        [appendTo]=\"appendTo\"\n        [tabindex]=\"tabindex\"\n        [placeholder]=\"placeholder\"\n        [filterPlaceholder]=\"filterPlaceholder\"\n        [filterLocale]=\"filterLocale\"\n        [inputId]=\"inputId\"\n        [selectId]=\"selectId\"\n        [dataKey]=\"dataKey\"\n        [filterBy]=\"filterBy\"\n        [autofocus]=\"autofocus\"\n        [resetFilterOnHide]=\"resetFilterOnHide\"\n        [dropdownIcon]=\"dropdownIcon\"\n        [optionLabel]=\"optionLabel\"\n        [optionValue]=\"optionValue\"\n        [optionDisabled]=\"optionDisabled\"\n        [optionGroupLabel]=\"optionGroupLabel\"\n        [optionGroupChildren]=\"optionGroupChildren\"\n        [autoDisplayFirst]=\"autoDisplayFirst\"\n        [group]=\"group\"\n        [showClear]=\"showClear\"\n        [emptyFilterMessage]=\"emptyFilterMessage\"\n        [emptyMessage]=\"emptyMessage\"\n        [lazy]=\"lazy\"\n        [virtualScroll]=\"virtualScroll\"\n        [virtualScrollItemSize]=\"virtualScrollItemSize\"\n        [virtualScrollOptions]=\"virtualScrollOptions\"\n        [overlayOptions]=\"myOverlayOptions\"\n        [ariaFilterLabel]=\"ariaFilterLabel\"\n        [ariaLabel]=\"ariaLabel\"\n        [ariaLabelledBy]=\"ariaLabelledBy\"\n        [filterMatchMode]=\"filterMatchMode\"\n        [maxlength]=\"maxlength\"\n        [tooltip]=\"tooltip\"\n        [tooltipPosition]=\"tooltipPosition\"\n        [tooltipPositionStyle]=\"tooltipPositionStyle\"\n        [tooltipStyleClass]=\"tooltipStyleClass\"\n        [autofocusFilter]=\"autofocusFilter\"\n        [overlayDirection]=\"overlayDirection\"\n        [disabled]=\"disabled\"\n        [itemSize]=\"itemSize\"\n        [autoZIndex]=\"autoZIndex\"\n        [baseZIndex]=\"baseZIndex\"\n        [showTransitionOptions]=\"showTransitionOptions\"\n        [hideTransitionOptions]=\"hideTransitionOptions\"\n        [options]=\"options\"\n        [filterValue]=\"filterValue\"\n        (onChange)=\"onChange\"\n        (onFilter)=\"handleFilter($event)\"\n        (onFocus)=\"onFocus\"\n        (onBlur)=\"onBlur\"\n        (onClick)=\"onClick\"\n        (onShow)=\"toggleShow($event)\"\n        (onHide)=\"toggleShow($event)\"\n        (onClear)=\"onClear\"\n        (onLazyLoad)=\"onLazyLoad\"\n        (ngModelChange)=\"this.getProvenance().interaction = 'user-change'; selectedChange.emit($event)\"\n        [ngModel]=\"selected\"\n    >\n        <ng-template let-option pTemplate=\"item\">\n            <div style=\"position: relative; width: 100%;\" [id]=\"getId() + option[dataKey] + 'div'\">\n                <svg \n                  [id]=\"getId() + option[dataKey]\" \n                  width=\"0\" \n                  height=\"0\"\n                  [style]=\"{ 'position': 'absolute', 'display': getProvenance().hasUserInteracted ? 'initial' : 'none' }\"\n                ></svg>\n                <div style=\"display: flex; justify-content: space-between; position: inherit;\">\n                    <span>\n                        {{ option[optionLabel] }}\n                    </span>\n                </div>\n            </div>\n        </ng-template>\n        <ng-template pTemplate=\"footer\">\n            <div class=\"custom-slider temporal-slider\">\n                <ngx-slider\n                    *ngIf=\"getProvenance().provenanceMode === 'temporal'\"\n                    [value]=\"getProvenance().temporalFilterRange[0]\"\n                    [highValue]=\"getProvenance().temporalFilterRange[1]\"\n                    [options]=\"getProvenance().temporalOptions\"\n                    (userChangeEnd)=\"getProvenance().setTemporalRange($event)\"\n                ></ngx-slider>\n            </div>\n        </ng-template>\n    </p-dropdown>\n</div>\n", styles: ["::ng-deep div.provenance-dropdown-panel>div>ul{position:relative}::ng-deep div.provenance-dropdown-panel>div.temporal-slider{padding-right:1.25rem;padding-left:1.25rem}::ng-deep .provenance-dropdown{width:initial!important}\n", "::ng-deep .custom-slider .ngx-slider .ngx-slider-bar{background:lightgray;height:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-selection{background:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer{width:8px;height:16px;top:auto;bottom:0;background-color:#333;border-top-left-radius:3px;border-top-right-radius:3px}::ng-deep .custom-slider .ngx-slider .ngx-slider-pointer:after{display:none}::ng-deep .custom-slider:not(.temporal-slider) .ngx-slider .ngx-slider-bubble{top:5px}::ng-deep .custom-slider .ngx-slider .ngx-slider-limit{font-weight:700;color:var(--blue-500)}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick{width:1px;height:10px;margin-left:4px;border-radius:0;background:#ffe4d1;top:-1px}::ng-deep .custom-slider .ngx-slider .ngx-slider-tick.ngx-slider-selected{background:var(--blue-500)}::ng-deep g.axis text{font-size:.7rem}::ng-deep .custom-slider span{margin-top:0!important;padding-top:0!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i1.ProvenanceWidgetsService }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.FilterService }, { type: i2.PrimeNGConfig }]; }, propDecorators: { mode: [{
                type: Input
            }], selected: [{
                type: Input
            }], iconSize: [{
                type: Input
            }], visualize: [{
                type: Input
            }], selectedChange: [{
                type: Output
            }], pDropdown: [{
                type: ViewChild,
                args: ["pDropdown"]
            }], provenance: [{
                type: Input
            }], freeze: [{
                type: Input
            }], provenanceChange: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,